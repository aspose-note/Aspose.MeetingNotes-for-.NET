using Aspose.MeetingNotes.AIIntegration;
using Aspose.MeetingNotes.Configuration;
using Aspose.MeetingNotes.Models;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;

namespace Aspose.MeetingNotes.Examples
{
    /// <summary>
    /// Example of a custom AI model implementation that returns mock data
    /// </summary>
    public class MockAIModel : IAIModel
    {
        private readonly ILogger<MockAIModel> logger;

        public MockAIModel(ILogger<MockAIModel> logger)
        {
            this.logger = logger;
        }

        public async Task<AnalyzedContent> AnalyzeContentAsync(string text, CancellationToken cancellationToken = default)
        {
            logger.LogInformation("Analyzing content with mock AI model");
            
            // Simulate some processing time
            await Task.Delay(100, cancellationToken);

            return new AnalyzedContent
            {
                Summary = "This is a mock summary generated by the custom AI model.",
                KeyPoints = new List<string>
                {
                    "Mock key point 1",
                    "Mock key point 2",
                    "Mock key point 3"
                },
                Topics = new List<string>
                {
                    "Mock topic 1",
                    "Mock topic 2"
                }
            };
        }

        public async Task<List<ActionItem>> ExtractActionItemsAsync(string text, CancellationToken cancellationToken = default)
        {
            logger.LogInformation("Extracting action items with mock AI model");
            
            // Simulate some processing time
            await Task.Delay(100, cancellationToken);

            return new List<ActionItem>
            {
                new ActionItem
                {
                    Description = "Mock action item 1",
                    Assignee = "John Doe",
                    DueDate = DateTime.Now.AddDays(7),
                    Status = "New"
                },
                new ActionItem
                {
                    Description = "Mock action item 2",
                    Assignee = "Jane Smith",
                    DueDate = DateTime.Now.AddDays(14),
                    Status = "New"
                }
            };
        }
    }

    /// <summary>
    /// Example demonstrating how to use a custom AI model implementation
    /// </summary>
    public static class CustomAIModelExample
    {
        public static async Task RunAsync()
        {
            // Configure services
            var services = new ServiceCollection();
            
            // Configure logging
            services.AddLogging(builder => 
            {
                builder.AddConsole();
                builder.SetMinimumLevel(LogLevel.Information);
            });

            // Configure MeetingNotes with custom AI model
            services.AddMeetingNotes(options =>
            {
                options.CustomAIModel = new MockAIModel(
                    services.BuildServiceProvider().GetRequiredService<ILogger<MockAIModel>>());
            });

            var serviceProvider = services.BuildServiceProvider();
            var client = serviceProvider.GetRequiredService<MeetingNotesClient>();

            // Example usage
            var result = await client.ProcessMeetingAsync(
                new FileStream("example.mp3", FileMode.Open),
                new MeetingNotesOptions
                {
                    Language = "en",
                    ExportFormat = ExportFormat.Markdown
                });

            Console.WriteLine("Meeting Summary:");
            Console.WriteLine(result.Summary);
            Console.WriteLine("\nAction Items:");
            foreach (var item in result.ActionItems)
            {
                Console.WriteLine($"- {item.Description} (Assigned to: {item.Assignee}, Due: {item.DueDate:d})");
            }
        }
    }
} 